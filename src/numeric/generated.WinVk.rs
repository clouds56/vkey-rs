// This file is auto-generated. Do not edit manually.


pub fn vk_to_u16(value: &Vk) -> u16 {
  #[allow(unused_parens)]
  const {
    assert!((&{keys::VK_LBUTTON                        }).0 == 0x01);
    assert!((&{keys::VK_RBUTTON                        }).0 == 0x02);
    assert!((&{keys::VK_MBUTTON                        }).0 == 0x04);
    assert!((&{keys::VK_XBUTTON1                       }).0 == 0x05);
    assert!((&{keys::VK_XBUTTON2                       }).0 == 0x06);
    assert!((&{keys::VK_BROWSER_BACK                   }).0 == 0xA6);
    assert!((&{keys::VK_BROWSER_FAVORITES              }).0 == 0xAB);
    assert!((&{keys::VK_BROWSER_FORWARD                }).0 == 0xA7);
    assert!((&{keys::VK_BROWSER_HOME                   }).0 == 0xAC);
    assert!((&{keys::VK_BROWSER_REFRESH                }).0 == 0xA8);
    assert!((&{keys::VK_BROWSER_SEARCH                 }).0 == 0xAA);
    assert!((&{keys::VK_BROWSER_STOP                   }).0 == 0xA9);
    assert!((&{keys::VK_LAUNCH_MAIL                    }).0 == 0xB4);
    assert!((&{keys::VK_LAUNCH_MEDIA_SELECT            }).0 == 0xB5);
    assert!((&{keys::VK_VOLUME_MUTE                    }).0 == 0xAD);
    assert!((&{keys::VK_MEDIA_PLAY_PAUSE               }).0 == 0xB3);
    assert!((&{keys::VK_MEDIA_NEXT_TRACK               }).0 == 0xB0);
    assert!((&{keys::VK_MEDIA_PREV_TRACK               }).0 == 0xB1);
    assert!((&{keys::VK_MEDIA_STOP                     }).0 == 0xB2);
    assert!((&{keys::VK_VOLUME_DOWN                    }).0 == 0xAE);
    assert!((&{keys::VK_VOLUME_UP                      }).0 == 0xAF);
    assert!((&{keys::VK_SLEEP                          }).0 == 0x5F);
    assert!((&{keys::VK_0                              }).0 == 0x30);
    assert!((&{keys::VK_1                              }).0 == 0x31);
    assert!((&{keys::VK_2                              }).0 == 0x32);
    assert!((&{keys::VK_3                              }).0 == 0x33);
    assert!((&{keys::VK_4                              }).0 == 0x34);
    assert!((&{keys::VK_5                              }).0 == 0x35);
    assert!((&{keys::VK_6                              }).0 == 0x36);
    assert!((&{keys::VK_7                              }).0 == 0x37);
    assert!((&{keys::VK_8                              }).0 == 0x38);
    assert!((&{keys::VK_9                              }).0 == 0x39);
    assert!((&{keys::VK_A                              }).0 == 0x41);
    assert!((&{keys::VK_APPS                           }).0 == 0x5D);
    assert!((&{keys::VK_B                              }).0 == 0x42);
    assert!((&{keys::VK_OEM_5                          }).0 == 0xDC);
    assert!((&{keys::VK_C                              }).0 == 0x43);
    assert!((&{keys::VK_CANCEL                         }).0 == 0x03);
    assert!((&{keys::VK_CAPITAL                        }).0 == 0x14);
    assert!((&{keys::VK_CLEAR                          }).0 == 0x0C);
    assert!((&{keys::VK_OEM_COMMA                      }).0 == 0xBC);
    assert!((&{keys::VK_D                              }).0 == 0x44);
    assert!((&{keys::VK_OEM_MINUS                      }).0 == 0xBD);
    assert!((&{keys::VK_BACK                           }).0 == 0x08);
    assert!((&{keys::VK_DELETE                         }).0 == 0x2E);
    assert!((&{keys::VK_DOWN                           }).0 == 0x28);
    assert!((&{keys::VK_E                              }).0 == 0x45);
    assert!((&{keys::VK_END                            }).0 == 0x23);
    assert!((&{keys::VK_OEM_PLUS                       }).0 == 0xBB);
    assert!((&{keys::VK_ESCAPE                         }).0 == 0x1B);
    assert!((&{keys::VK_EXECUTE                        }).0 == 0x2B);
    assert!((&{keys::VK_F                              }).0 == 0x46);
    assert!((&{keys::VK_F1                             }).0 == 0x70);
    assert!((&{keys::VK_F10                            }).0 == 0x79);
    assert!((&{keys::VK_F11                            }).0 == 0x7A);
    assert!((&{keys::VK_F12                            }).0 == 0x7B);
    assert!((&{keys::VK_F13                            }).0 == 0x7C);
    assert!((&{keys::VK_F14                            }).0 == 0x7D);
    assert!((&{keys::VK_F15                            }).0 == 0x7E);
    assert!((&{keys::VK_F16                            }).0 == 0x7F);
    assert!((&{keys::VK_F17                            }).0 == 0x80);
    assert!((&{keys::VK_F18                            }).0 == 0x81);
    assert!((&{keys::VK_F19                            }).0 == 0x82);
    assert!((&{keys::VK_F2                             }).0 == 0x71);
    assert!((&{keys::VK_F20                            }).0 == 0x83);
    assert!((&{keys::VK_F21                            }).0 == 0x84);
    assert!((&{keys::VK_F22                            }).0 == 0x85);
    assert!((&{keys::VK_F23                            }).0 == 0x86);
    assert!((&{keys::VK_F24                            }).0 == 0x87);
    assert!((&{keys::VK_F3                             }).0 == 0x72);
    assert!((&{keys::VK_F4                             }).0 == 0x73);
    assert!((&{keys::VK_F5                             }).0 == 0x74);
    assert!((&{keys::VK_F6                             }).0 == 0x75);
    assert!((&{keys::VK_F7                             }).0 == 0x76);
    assert!((&{keys::VK_F8                             }).0 == 0x77);
    assert!((&{keys::VK_F9                             }).0 == 0x78);
    assert!((&{keys::VK_OEM_2                          }).0 == 0xBF);
    assert!((&{keys::VK_G                              }).0 == 0x47);
    assert!((&{keys::VK_OEM_3                          }).0 == 0xC0);
    assert!((&{keys::VK_H                              }).0 == 0x48);
    assert!((&{keys::VK_HELP                           }).0 == 0x2F);
    assert!((&{keys::VK_HOME                           }).0 == 0x24);
    assert!((&{keys::VK_I                              }).0 == 0x49);
    assert!((&{keys::VK_INSERT                         }).0 == 0x2D);
    assert!((&{keys::VK_J                              }).0 == 0x4A);
    assert!((&{keys::VK_K                              }).0 == 0x4B);
    assert!((&{keys::VK_L                              }).0 == 0x4C);
    assert!((&{keys::VK_LMENU                          }).0 == 0xA4);
    assert!((&{keys::VK_MENU                           }).0 == 0x12);
    assert!((&{keys::VK_MENU                           }).0 == 0x12);
    assert!((&{keys::VK_OEM_7                          }).0 == 0xDE);
    assert!((&{keys::VK_LEFT                           }).0 == 0x25);
    assert!((&{keys::VK_OEM_4                          }).0 == 0xDB);
    assert!((&{keys::VK_CONTROL                        }).0 == 0x11);
    assert!((&{keys::VK_LCONTROL                       }).0 == 0xA2);
    assert!((&{keys::VK_LWIN                           }).0 == 0x5B);
    assert!((&{keys::VK_LWIN                           }).0 == 0x5B);
    assert!((&{keys::VK_LWIN                           }).0 == 0x5B);
    assert!((&{keys::VK_LWIN                           }).0 == 0x5B);
    assert!((&{keys::VK_LWIN                           }).0 == 0x5B);
    assert!((&{keys::VK_LSHIFT                         }).0 == 0xA0);
    assert!((&{keys::VK_SHIFT                          }).0 == 0x10);
    assert!((&{keys::VK_M                              }).0 == 0x4D);
    assert!((&{keys::VK_N                              }).0 == 0x4E);
    assert!((&{keys::VK_OEM_102                        }).0 == 0xE2);
    assert!((&{keys::VK_O                              }).0 == 0x4F);
    assert!((&{keys::VK_P                              }).0 == 0x50);
    assert!((&{keys::VK_NEXT                           }).0 == 0x22);
    assert!((&{keys::VK_PRIOR                          }).0 == 0x21);
    assert!((&{keys::VK_PAUSE                          }).0 == 0x13);
    assert!((&{keys::VK_OEM_PERIOD                     }).0 == 0xBE);
    assert!((&{keys::VK_SNAPSHOT                       }).0 == 0x2C);
    assert!((&{keys::VK_Q                              }).0 == 0x51);
    assert!((&{keys::VK_R                              }).0 == 0x52);
    assert!((&{keys::VK_RETURN                         }).0 == 0x0D);
    assert!((&{keys::VK_RMENU                          }).0 == 0xA5);
    assert!((&{keys::VK_RIGHT                          }).0 == 0x27);
    assert!((&{keys::VK_OEM_6                          }).0 == 0xDD);
    assert!((&{keys::VK_RCONTROL                       }).0 == 0xA3);
    assert!((&{keys::VK_RWIN                           }).0 == 0x5C);
    assert!((&{keys::VK_RSHIFT                         }).0 == 0xA1);
    assert!((&{keys::VK_S                              }).0 == 0x53);
    assert!((&{keys::VK_SCROLL                         }).0 == 0x91);
    assert!((&{keys::VK_SELECT                         }).0 == 0x29);
    assert!((&{keys::VK_OEM_1                          }).0 == 0xBA);
    assert!((&{keys::VK_SPACE                          }).0 == 0x20);
    assert!((&{keys::VK_T                              }).0 == 0x54);
    assert!((&{keys::VK_TAB                            }).0 == 0x09);
    assert!((&{keys::VK_U                              }).0 == 0x55);
    assert!((&{keys::VK_UP                             }).0 == 0x26);
    assert!((&{keys::VK_V                              }).0 == 0x56);
    assert!((&{keys::VK_W                              }).0 == 0x57);
    assert!((&{keys::VK_X                              }).0 == 0x58);
    assert!((&{keys::VK_Y                              }).0 == 0x59);
    assert!((&{keys::VK_Z                              }).0 == 0x5A);
    assert!((&{keys::VK_NUMPAD0                        }).0 == 0x60);
    assert!((&{keys::VK_NUMPAD1                        }).0 == 0x61);
    assert!((&{keys::VK_NUMPAD2                        }).0 == 0x62);
    assert!((&{keys::VK_NUMPAD3                        }).0 == 0x63);
    assert!((&{keys::VK_NUMPAD4                        }).0 == 0x64);
    assert!((&{keys::VK_NUMPAD5                        }).0 == 0x65);
    assert!((&{keys::VK_NUMPAD6                        }).0 == 0x66);
    assert!((&{keys::VK_NUMPAD7                        }).0 == 0x67);
    assert!((&{keys::VK_NUMPAD8                        }).0 == 0x68);
    assert!((&{keys::VK_NUMPAD9                        }).0 == 0x69);
    assert!((&{keys::VK_SUBTRACT                       }).0 == 0x6D);
    assert!((&{keys::VK_DIVIDE                         }).0 == 0x6F);
    assert!((&{keys::VK_NUMLOCK                        }).0 == 0x90);
    assert!((&{keys::VK_DECIMAL                        }).0 == 0x6E);
    assert!((&{keys::VK_ADD                            }).0 == 0x6B);
    assert!((&{keys::VK_MULTIPLY                       }).0 == 0x6A);
    assert!((&{keys::VK__none_                         }).0 == 0xFF);
    assert!((&{keys::VK_ABNT_C1                        }).0 == 0xC1);
    assert!((&{keys::VK_ABNT_C2                        }).0 == 0xC2);
    assert!((&{keys::VK_ATTN                           }).0 == 0xF6);
    assert!((&{keys::VK_CRSEL                          }).0 == 0xF7);
    assert!((&{keys::VK_DBE_ALPHANUMERIC               }).0 == 0xF0);
    assert!((&{keys::VK_DBE_CODEINPUT                  }).0 == 0xFA);
    assert!((&{keys::VK_DBE_DBCSCHAR                   }).0 == 0xF4);
    assert!((&{keys::VK_DBE_DETERMINESTRING            }).0 == 0xFC);
    assert!((&{keys::VK_DBE_ENTERDLGCONVERSIONMODE     }).0 == 0xFD);
    assert!((&{keys::VK_DBE_ENTERIMECONFIGMODE         }).0 == 0xF8);
    assert!((&{keys::VK_DBE_ENTERWORDREGISTERMODE      }).0 == 0xF7);
    assert!((&{keys::VK_DBE_FLUSHSTRING                }).0 == 0xF9);
    assert!((&{keys::VK_DBE_HIRAGANA                   }).0 == 0xF2);
    assert!((&{keys::VK_DBE_KATAKANA                   }).0 == 0xF1);
    assert!((&{keys::VK_DBE_NOCODEINPUT                }).0 == 0xFB);
    assert!((&{keys::VK_DBE_NOROMAN                    }).0 == 0xF6);
    assert!((&{keys::VK_DBE_ROMAN                      }).0 == 0xF5);
    assert!((&{keys::VK_DBE_SBCSCHAR                   }).0 == 0xF3);
    assert!((&{keys::VK_EREOF                          }).0 == 0xF9);
    assert!((&{keys::VK_EXSEL                          }).0 == 0xF8);
    assert!((&{keys::VK_GAMEPAD_A                      }).0 == 0xC3);
    assert!((&{keys::VK_GAMEPAD_B                      }).0 == 0xC4);
    assert!((&{keys::VK_GAMEPAD_DPAD_DOWN              }).0 == 0xCC);
    assert!((&{keys::VK_GAMEPAD_DPAD_LEFT              }).0 == 0xCD);
    assert!((&{keys::VK_GAMEPAD_DPAD_RIGHT             }).0 == 0xCE);
    assert!((&{keys::VK_GAMEPAD_DPAD_UP                }).0 == 0xCB);
    assert!((&{keys::VK_GAMEPAD_LEFT_SHOULDER          }).0 == 0xC8);
    assert!((&{keys::VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON }).0 == 0xD1);
    assert!((&{keys::VK_GAMEPAD_LEFT_THUMBSTICK_DOWN   }).0 == 0xD4);
    assert!((&{keys::VK_GAMEPAD_LEFT_THUMBSTICK_LEFT   }).0 == 0xD6);
    assert!((&{keys::VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT  }).0 == 0xD5);
    assert!((&{keys::VK_GAMEPAD_LEFT_THUMBSTICK_UP     }).0 == 0xD3);
    assert!((&{keys::VK_GAMEPAD_LEFT_TRIGGER           }).0 == 0xC9);
    assert!((&{keys::VK_GAMEPAD_MENU                   }).0 == 0xCF);
    assert!((&{keys::VK_GAMEPAD_RIGHT_SHOULDER         }).0 == 0xC7);
    assert!((&{keys::VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON}).0 == 0xD2);
    assert!((&{keys::VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN  }).0 == 0xD8);
    assert!((&{keys::VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT  }).0 == 0xDA);
    assert!((&{keys::VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT }).0 == 0xD9);
    assert!((&{keys::VK_GAMEPAD_RIGHT_THUMBSTICK_UP    }).0 == 0xD7);
    assert!((&{keys::VK_GAMEPAD_RIGHT_TRIGGER          }).0 == 0xCA);
    assert!((&{keys::VK_GAMEPAD_VIEW                   }).0 == 0xD0);
    assert!((&{keys::VK_GAMEPAD_X                      }).0 == 0xC5);
    assert!((&{keys::VK_GAMEPAD_Y                      }).0 == 0xC6);
    assert!((&{keys::VK_ICO_00                         }).0 == 0xE4);
    assert!((&{keys::VK_ICO_CLEAR                      }).0 == 0xE6);
    assert!((&{keys::VK_ICO_HELP                       }).0 == 0xE3);
    assert!((&{keys::VK_NAVIGATION_ACCEPT              }).0 == 0x8E);
    assert!((&{keys::VK_NAVIGATION_CANCEL              }).0 == 0x8F);
    assert!((&{keys::VK_NAVIGATION_DOWN                }).0 == 0x8B);
    assert!((&{keys::VK_NAVIGATION_LEFT                }).0 == 0x8C);
    assert!((&{keys::VK_NAVIGATION_MENU                }).0 == 0x89);
    assert!((&{keys::VK_NAVIGATION_RIGHT               }).0 == 0x8D);
    assert!((&{keys::VK_NAVIGATION_UP                  }).0 == 0x8A);
    assert!((&{keys::VK_NAVIGATION_VIEW                }).0 == 0x88);
    assert!((&{keys::VK_NONAME                         }).0 == 0xFC);
    assert!((&{keys::VK_OEM_8                          }).0 == 0xDF);
    assert!((&{keys::VK_OEM_ATTN                       }).0 == 0xF0);
    assert!((&{keys::VK_OEM_AUTO                       }).0 == 0xF3);
    assert!((&{keys::VK_OEM_AX                         }).0 == 0xE1);
    assert!((&{keys::VK_OEM_BACKTAB                    }).0 == 0xF5);
    assert!((&{keys::VK_OEM_CLEAR                      }).0 == 0xFE);
    assert!((&{keys::VK_OEM_COPY                       }).0 == 0xF2);
    assert!((&{keys::VK_OEM_CUSEL                      }).0 == 0xEF);
    assert!((&{keys::VK_OEM_ENLW                       }).0 == 0xF4);
    assert!((&{keys::VK_OEM_FINISH                     }).0 == 0xF1);
    assert!((&{keys::VK_OEM_FJ_JISHO                   }).0 == 0x92);
    assert!((&{keys::VK_OEM_FJ_LOYA                    }).0 == 0x95);
    assert!((&{keys::VK_OEM_FJ_MASSHOU                 }).0 == 0x93);
    assert!((&{keys::VK_OEM_FJ_ROYA                    }).0 == 0x96);
    assert!((&{keys::VK_OEM_FJ_TOUROKU                 }).0 == 0x94);
    assert!((&{keys::VK_OEM_JUMP                       }).0 == 0xEA);
    assert!((&{keys::VK_OEM_NEC_EQUAL                  }).0 == 0x92);
    assert!((&{keys::VK_OEM_PA1                        }).0 == 0xEB);
    assert!((&{keys::VK_OEM_PA2                        }).0 == 0xEC);
    assert!((&{keys::VK_OEM_PA3                        }).0 == 0xED);
    assert!((&{keys::VK_OEM_RESET                      }).0 == 0xE9);
    assert!((&{keys::VK_OEM_WSCTRL                     }).0 == 0xEE);
    assert!((&{keys::VK_PA1                            }).0 == 0xFD);
    assert!((&{keys::VK_PACKET                         }).0 == 0xE7);
    assert!((&{keys::VK_PLAY                           }).0 == 0xFA);
    assert!((&{keys::VK_PROCESSKEY                     }).0 == 0xE5);
    assert!((&{keys::VK_ZOOM                           }).0 == 0xFB);
    assert!((&{keys::VK_ACCEPT                         }).0 == 0x1E);
    assert!((&{keys::VK_CONVERT                        }).0 == 0x1C);
    assert!((&{keys::VK_FINAL                          }).0 == 0x18);
    assert!((&{keys::VK_IME_OFF                        }).0 == 0x1A);
    assert!((&{keys::VK_IME_ON                         }).0 == 0x16);
    assert!((&{keys::VK_JUNJA                          }).0 == 0x17);
    assert!((&{keys::VK_KANA                           }).0 == 0x15);
    assert!((&{keys::VK_HANGEUL                        }).0 == 0x15);
    assert!((&{keys::VK_HANGUL                         }).0 == 0x15);
    assert!((&{keys::VK_KANJI                          }).0 == 0x19);
    assert!((&{keys::VK_HANJA                          }).0 == 0x19);
    assert!((&{keys::VK_MODECHANGE                     }).0 == 0x1F);
    assert!((&{keys::VK_NONCONVERT                     }).0 == 0x1D);
    assert!((&{keys::VK_PRINT                          }).0 == 0x2A);
    assert!((&{keys::VK_SEPARATOR                      }).0 == 0x6C);
    assert!((&{keys::VK_LAUNCH_APP1                    }).0 == 0xB6);
    assert!((&{keys::VK_LAUNCH_APP2                    }).0 == 0xB7);
    }
  value.0
}

impl crate::numeric::AsCode<Vk> for crate::numeric::Coder {
  type Code = u16;
  fn as_code(value: &Vk) -> Self::Code {
    vk_to_u16(value)
  }
  fn from_code(code: Self::Code) -> Option<Vk> {
    match code {
      0x01 => Some(keys::VK_LBUTTON                        ),
      0x02 => Some(keys::VK_RBUTTON                        ),
      0x04 => Some(keys::VK_MBUTTON                        ),
      0x05 => Some(keys::VK_XBUTTON1                       ),
      0x06 => Some(keys::VK_XBUTTON2                       ),
      0xA6 => Some(keys::VK_BROWSER_BACK                   ),
      0xAB => Some(keys::VK_BROWSER_FAVORITES              ),
      0xA7 => Some(keys::VK_BROWSER_FORWARD                ),
      0xAC => Some(keys::VK_BROWSER_HOME                   ),
      0xA8 => Some(keys::VK_BROWSER_REFRESH                ),
      0xAA => Some(keys::VK_BROWSER_SEARCH                 ),
      0xA9 => Some(keys::VK_BROWSER_STOP                   ),
      0xB4 => Some(keys::VK_LAUNCH_MAIL                    ),
      0xB5 => Some(keys::VK_LAUNCH_MEDIA_SELECT            ),
      0xAD => Some(keys::VK_VOLUME_MUTE                    ),
      0xB3 => Some(keys::VK_MEDIA_PLAY_PAUSE               ),
      0xB0 => Some(keys::VK_MEDIA_NEXT_TRACK               ),
      0xB1 => Some(keys::VK_MEDIA_PREV_TRACK               ),
      0xB2 => Some(keys::VK_MEDIA_STOP                     ),
      0xAE => Some(keys::VK_VOLUME_DOWN                    ),
      0xAF => Some(keys::VK_VOLUME_UP                      ),
      0x5F => Some(keys::VK_SLEEP                          ),
      0x30 => Some(keys::VK_0                              ),
      0x31 => Some(keys::VK_1                              ),
      0x32 => Some(keys::VK_2                              ),
      0x33 => Some(keys::VK_3                              ),
      0x34 => Some(keys::VK_4                              ),
      0x35 => Some(keys::VK_5                              ),
      0x36 => Some(keys::VK_6                              ),
      0x37 => Some(keys::VK_7                              ),
      0x38 => Some(keys::VK_8                              ),
      0x39 => Some(keys::VK_9                              ),
      0x41 => Some(keys::VK_A                              ),
      0x5D => Some(keys::VK_APPS                           ),
      0x42 => Some(keys::VK_B                              ),
      0xDC => Some(keys::VK_OEM_5                          ),
      0x43 => Some(keys::VK_C                              ),
      0x03 => Some(keys::VK_CANCEL                         ),
      0x14 => Some(keys::VK_CAPITAL                        ),
      0x0C => Some(keys::VK_CLEAR                          ),
      0xBC => Some(keys::VK_OEM_COMMA                      ),
      0x44 => Some(keys::VK_D                              ),
      0xBD => Some(keys::VK_OEM_MINUS                      ),
      0x08 => Some(keys::VK_BACK                           ),
      0x2E => Some(keys::VK_DELETE                         ),
      0x28 => Some(keys::VK_DOWN                           ),
      0x45 => Some(keys::VK_E                              ),
      0x23 => Some(keys::VK_END                            ),
      0xBB => Some(keys::VK_OEM_PLUS                       ),
      0x1B => Some(keys::VK_ESCAPE                         ),
      0x2B => Some(keys::VK_EXECUTE                        ),
      0x46 => Some(keys::VK_F                              ),
      0x70 => Some(keys::VK_F1                             ),
      0x79 => Some(keys::VK_F10                            ),
      0x7A => Some(keys::VK_F11                            ),
      0x7B => Some(keys::VK_F12                            ),
      0x7C => Some(keys::VK_F13                            ),
      0x7D => Some(keys::VK_F14                            ),
      0x7E => Some(keys::VK_F15                            ),
      0x7F => Some(keys::VK_F16                            ),
      0x80 => Some(keys::VK_F17                            ),
      0x81 => Some(keys::VK_F18                            ),
      0x82 => Some(keys::VK_F19                            ),
      0x71 => Some(keys::VK_F2                             ),
      0x83 => Some(keys::VK_F20                            ),
      0x84 => Some(keys::VK_F21                            ),
      0x85 => Some(keys::VK_F22                            ),
      0x86 => Some(keys::VK_F23                            ),
      0x87 => Some(keys::VK_F24                            ),
      0x72 => Some(keys::VK_F3                             ),
      0x73 => Some(keys::VK_F4                             ),
      0x74 => Some(keys::VK_F5                             ),
      0x75 => Some(keys::VK_F6                             ),
      0x76 => Some(keys::VK_F7                             ),
      0x77 => Some(keys::VK_F8                             ),
      0x78 => Some(keys::VK_F9                             ),
      0xBF => Some(keys::VK_OEM_2                          ),
      0x47 => Some(keys::VK_G                              ),
      0xC0 => Some(keys::VK_OEM_3                          ),
      0x48 => Some(keys::VK_H                              ),
      0x2F => Some(keys::VK_HELP                           ),
      0x24 => Some(keys::VK_HOME                           ),
      0x49 => Some(keys::VK_I                              ),
      0x2D => Some(keys::VK_INSERT                         ),
      0x4A => Some(keys::VK_J                              ),
      0x4B => Some(keys::VK_K                              ),
      0x4C => Some(keys::VK_L                              ),
      0xA4 => Some(keys::VK_LMENU                          ),
      0x12 => Some(keys::VK_MENU                           ),
      0xDE => Some(keys::VK_OEM_7                          ),
      0x25 => Some(keys::VK_LEFT                           ),
      0xDB => Some(keys::VK_OEM_4                          ),
      0x11 => Some(keys::VK_CONTROL                        ),
      0xA2 => Some(keys::VK_LCONTROL                       ),
      0x5B => Some(keys::VK_LWIN                           ),
      0xA0 => Some(keys::VK_LSHIFT                         ),
      0x10 => Some(keys::VK_SHIFT                          ),
      0x4D => Some(keys::VK_M                              ),
      0x4E => Some(keys::VK_N                              ),
      0xE2 => Some(keys::VK_OEM_102                        ),
      0x4F => Some(keys::VK_O                              ),
      0x50 => Some(keys::VK_P                              ),
      0x22 => Some(keys::VK_NEXT                           ),
      0x21 => Some(keys::VK_PRIOR                          ),
      0x13 => Some(keys::VK_PAUSE                          ),
      0xBE => Some(keys::VK_OEM_PERIOD                     ),
      0x2C => Some(keys::VK_SNAPSHOT                       ),
      0x51 => Some(keys::VK_Q                              ),
      0x52 => Some(keys::VK_R                              ),
      0x0D => Some(keys::VK_RETURN                         ),
      0xA5 => Some(keys::VK_RMENU                          ),
      0x27 => Some(keys::VK_RIGHT                          ),
      0xDD => Some(keys::VK_OEM_6                          ),
      0xA3 => Some(keys::VK_RCONTROL                       ),
      0x5C => Some(keys::VK_RWIN                           ),
      0xA1 => Some(keys::VK_RSHIFT                         ),
      0x53 => Some(keys::VK_S                              ),
      0x91 => Some(keys::VK_SCROLL                         ),
      0x29 => Some(keys::VK_SELECT                         ),
      0xBA => Some(keys::VK_OEM_1                          ),
      0x20 => Some(keys::VK_SPACE                          ),
      0x54 => Some(keys::VK_T                              ),
      0x09 => Some(keys::VK_TAB                            ),
      0x55 => Some(keys::VK_U                              ),
      0x26 => Some(keys::VK_UP                             ),
      0x56 => Some(keys::VK_V                              ),
      0x57 => Some(keys::VK_W                              ),
      0x58 => Some(keys::VK_X                              ),
      0x59 => Some(keys::VK_Y                              ),
      0x5A => Some(keys::VK_Z                              ),
      0x60 => Some(keys::VK_NUMPAD0                        ),
      0x61 => Some(keys::VK_NUMPAD1                        ),
      0x62 => Some(keys::VK_NUMPAD2                        ),
      0x63 => Some(keys::VK_NUMPAD3                        ),
      0x64 => Some(keys::VK_NUMPAD4                        ),
      0x65 => Some(keys::VK_NUMPAD5                        ),
      0x66 => Some(keys::VK_NUMPAD6                        ),
      0x67 => Some(keys::VK_NUMPAD7                        ),
      0x68 => Some(keys::VK_NUMPAD8                        ),
      0x69 => Some(keys::VK_NUMPAD9                        ),
      0x6D => Some(keys::VK_SUBTRACT                       ),
      0x6F => Some(keys::VK_DIVIDE                         ),
      0x90 => Some(keys::VK_NUMLOCK                        ),
      0x6E => Some(keys::VK_DECIMAL                        ),
      0x6B => Some(keys::VK_ADD                            ),
      0x6A => Some(keys::VK_MULTIPLY                       ),
      0xFF => Some(keys::VK__none_                         ),
      0xC1 => Some(keys::VK_ABNT_C1                        ),
      0xC2 => Some(keys::VK_ABNT_C2                        ),
      0xF6 => Some(keys::VK_ATTN                           ),
      0xF7 => Some(keys::VK_CRSEL                          ),
      0xF0 => Some(keys::VK_DBE_ALPHANUMERIC               ),
      0xFA => Some(keys::VK_DBE_CODEINPUT                  ),
      0xF4 => Some(keys::VK_DBE_DBCSCHAR                   ),
      0xFC => Some(keys::VK_DBE_DETERMINESTRING            ),
      0xFD => Some(keys::VK_DBE_ENTERDLGCONVERSIONMODE     ),
      0xF8 => Some(keys::VK_DBE_ENTERIMECONFIGMODE         ),
      0xF7 => Some(keys::VK_DBE_ENTERWORDREGISTERMODE      ),
      0xF9 => Some(keys::VK_DBE_FLUSHSTRING                ),
      0xF2 => Some(keys::VK_DBE_HIRAGANA                   ),
      0xF1 => Some(keys::VK_DBE_KATAKANA                   ),
      0xFB => Some(keys::VK_DBE_NOCODEINPUT                ),
      0xF6 => Some(keys::VK_DBE_NOROMAN                    ),
      0xF5 => Some(keys::VK_DBE_ROMAN                      ),
      0xF3 => Some(keys::VK_DBE_SBCSCHAR                   ),
      0xF9 => Some(keys::VK_EREOF                          ),
      0xF8 => Some(keys::VK_EXSEL                          ),
      0xC3 => Some(keys::VK_GAMEPAD_A                      ),
      0xC4 => Some(keys::VK_GAMEPAD_B                      ),
      0xCC => Some(keys::VK_GAMEPAD_DPAD_DOWN              ),
      0xCD => Some(keys::VK_GAMEPAD_DPAD_LEFT              ),
      0xCE => Some(keys::VK_GAMEPAD_DPAD_RIGHT             ),
      0xCB => Some(keys::VK_GAMEPAD_DPAD_UP                ),
      0xC8 => Some(keys::VK_GAMEPAD_LEFT_SHOULDER          ),
      0xD1 => Some(keys::VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON ),
      0xD4 => Some(keys::VK_GAMEPAD_LEFT_THUMBSTICK_DOWN   ),
      0xD6 => Some(keys::VK_GAMEPAD_LEFT_THUMBSTICK_LEFT   ),
      0xD5 => Some(keys::VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT  ),
      0xD3 => Some(keys::VK_GAMEPAD_LEFT_THUMBSTICK_UP     ),
      0xC9 => Some(keys::VK_GAMEPAD_LEFT_TRIGGER           ),
      0xCF => Some(keys::VK_GAMEPAD_MENU                   ),
      0xC7 => Some(keys::VK_GAMEPAD_RIGHT_SHOULDER         ),
      0xD2 => Some(keys::VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON),
      0xD8 => Some(keys::VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN  ),
      0xDA => Some(keys::VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT  ),
      0xD9 => Some(keys::VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT ),
      0xD7 => Some(keys::VK_GAMEPAD_RIGHT_THUMBSTICK_UP    ),
      0xCA => Some(keys::VK_GAMEPAD_RIGHT_TRIGGER          ),
      0xD0 => Some(keys::VK_GAMEPAD_VIEW                   ),
      0xC5 => Some(keys::VK_GAMEPAD_X                      ),
      0xC6 => Some(keys::VK_GAMEPAD_Y                      ),
      0xE4 => Some(keys::VK_ICO_00                         ),
      0xE6 => Some(keys::VK_ICO_CLEAR                      ),
      0xE3 => Some(keys::VK_ICO_HELP                       ),
      0x8E => Some(keys::VK_NAVIGATION_ACCEPT              ),
      0x8F => Some(keys::VK_NAVIGATION_CANCEL              ),
      0x8B => Some(keys::VK_NAVIGATION_DOWN                ),
      0x8C => Some(keys::VK_NAVIGATION_LEFT                ),
      0x89 => Some(keys::VK_NAVIGATION_MENU                ),
      0x8D => Some(keys::VK_NAVIGATION_RIGHT               ),
      0x8A => Some(keys::VK_NAVIGATION_UP                  ),
      0x88 => Some(keys::VK_NAVIGATION_VIEW                ),
      0xFC => Some(keys::VK_NONAME                         ),
      0xDF => Some(keys::VK_OEM_8                          ),
      0xF0 => Some(keys::VK_OEM_ATTN                       ),
      0xF3 => Some(keys::VK_OEM_AUTO                       ),
      0xE1 => Some(keys::VK_OEM_AX                         ),
      0xF5 => Some(keys::VK_OEM_BACKTAB                    ),
      0xFE => Some(keys::VK_OEM_CLEAR                      ),
      0xF2 => Some(keys::VK_OEM_COPY                       ),
      0xEF => Some(keys::VK_OEM_CUSEL                      ),
      0xF4 => Some(keys::VK_OEM_ENLW                       ),
      0xF1 => Some(keys::VK_OEM_FINISH                     ),
      0x92 => Some(keys::VK_OEM_FJ_JISHO                   ),
      0x95 => Some(keys::VK_OEM_FJ_LOYA                    ),
      0x93 => Some(keys::VK_OEM_FJ_MASSHOU                 ),
      0x96 => Some(keys::VK_OEM_FJ_ROYA                    ),
      0x94 => Some(keys::VK_OEM_FJ_TOUROKU                 ),
      0xEA => Some(keys::VK_OEM_JUMP                       ),
      0x92 => Some(keys::VK_OEM_NEC_EQUAL                  ),
      0xEB => Some(keys::VK_OEM_PA1                        ),
      0xEC => Some(keys::VK_OEM_PA2                        ),
      0xED => Some(keys::VK_OEM_PA3                        ),
      0xE9 => Some(keys::VK_OEM_RESET                      ),
      0xEE => Some(keys::VK_OEM_WSCTRL                     ),
      0xFD => Some(keys::VK_PA1                            ),
      0xE7 => Some(keys::VK_PACKET                         ),
      0xFA => Some(keys::VK_PLAY                           ),
      0xE5 => Some(keys::VK_PROCESSKEY                     ),
      0xFB => Some(keys::VK_ZOOM                           ),
      0x1E => Some(keys::VK_ACCEPT                         ),
      0x1C => Some(keys::VK_CONVERT                        ),
      0x18 => Some(keys::VK_FINAL                          ),
      0x1A => Some(keys::VK_IME_OFF                        ),
      0x16 => Some(keys::VK_IME_ON                         ),
      0x17 => Some(keys::VK_JUNJA                          ),
      0x15 => Some(keys::VK_KANA                           ),
      0x15 => Some(keys::VK_HANGEUL                        ),
      0x15 => Some(keys::VK_HANGUL                         ),
      0x19 => Some(keys::VK_KANJI                          ),
      0x19 => Some(keys::VK_HANJA                          ),
      0x1F => Some(keys::VK_MODECHANGE                     ),
      0x1D => Some(keys::VK_NONCONVERT                     ),
      0x2A => Some(keys::VK_PRINT                          ),
      0x6C => Some(keys::VK_SEPARATOR                      ),
      0xB6 => Some(keys::VK_LAUNCH_APP1                    ),
      0xB7 => Some(keys::VK_LAUNCH_APP2                    ),
      _ => None,
    }
  }
  unsafe fn from_code_unchecked(code: Self::Code) -> Vk {
    unsafe { crate::numeric::convert_from_code_unchecked(code) }
  }
  }

