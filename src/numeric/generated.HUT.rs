// This file is auto-generated. Do not edit manually.


pub fn usage_to_u32(value: &Usage) -> u32 {
  AsUsage::usage_value(value)
}

impl crate::numeric::AsCode<Usage> for crate::numeric::Coder {
  type Code = u32;
  fn as_code(value: &Usage) -> Self::Code {
    usage_to_u32(value)
  }
  fn from_code(code: Self::Code) -> Option<Usage> {
    match code {
      0x90001 => Some(Button::Button(1)                                  .usage()),
      0x90002 => Some(Button::Button(2)                                  .usage()),
      0x90003 => Some(Button::Button(3)                                  .usage()),
      0x90004 => Some(Button::Button(4)                                  .usage()),
      0x90005 => Some(Button::Button(5)                                  .usage()),
      0xC0224 => Some(Consumer::ACBack                                   .usage()),
      0xC022A => Some(Consumer::ACBookmarks                              .usage()),
      0xC0225 => Some(Consumer::ACForward                                .usage()),
      0xC0223 => Some(Consumer::ACHome                                   .usage()),
      0xC0227 => Some(Consumer::ACRefresh                                .usage()),
      0xC0221 => Some(Consumer::ACSearch                                 .usage()),
      0xC0226 => Some(Consumer::ACStop                                   .usage()),
      0xC018A => Some(Consumer::ALEmailReader                            .usage()),
      0xC0087 => Some(Consumer::MediaSelection                           .usage()),
      0xC00E2 => Some(Consumer::Mute                                     .usage()),
      0xC00CD => Some(Consumer::PlayPause                                .usage()),
      0xC00B5 => Some(Consumer::ScanNextTrack                            .usage()),
      0xC00B6 => Some(Consumer::ScanPreviousTrack                        .usage()),
      0xC00B7 => Some(Consumer::Stop                                     .usage()),
      0xC00EA => Some(Consumer::VolumeDecrement                          .usage()),
      0xC00E9 => Some(Consumer::VolumeIncrement                          .usage()),
      0x10082 => Some(GenericDesktop::SystemSleep                        .usage()),
      0x70027 => Some(KeyboardKeypad::Keyboard0andRightBracket           .usage()),
      0x7001E => Some(KeyboardKeypad::Keyboard1andBang                   .usage()),
      0x7001F => Some(KeyboardKeypad::Keyboard2andAt                     .usage()),
      0x70020 => Some(KeyboardKeypad::Keyboard3andHash                   .usage()),
      0x70021 => Some(KeyboardKeypad::Keyboard4andDollar                 .usage()),
      0x70022 => Some(KeyboardKeypad::Keyboard5andPercent                .usage()),
      0x70023 => Some(KeyboardKeypad::Keyboard6andCaret                  .usage()),
      0x70024 => Some(KeyboardKeypad::Keyboard7andAmpersand              .usage()),
      0x70025 => Some(KeyboardKeypad::Keyboard8andStar                   .usage()),
      0x70026 => Some(KeyboardKeypad::Keyboard9andLeftBracket            .usage()),
      0x70004 => Some(KeyboardKeypad::KeyboardA                          .usage()),
      0x70065 => Some(KeyboardKeypad::KeyboardApplication                .usage()),
      0x70005 => Some(KeyboardKeypad::KeyboardB                          .usage()),
      0x70031 => Some(KeyboardKeypad::KeyboardBackslashandPipe           .usage()),
      0x70006 => Some(KeyboardKeypad::KeyboardC                          .usage()),
      0x7009B => Some(KeyboardKeypad::KeyboardCancel                     .usage()),
      0x70039 => Some(KeyboardKeypad::KeyboardCapsLock                   .usage()),
      0x7009C => Some(KeyboardKeypad::KeyboardClear                      .usage()),
      0x70036 => Some(KeyboardKeypad::KeyboardCommaandLessThan           .usage()),
      0x70007 => Some(KeyboardKeypad::KeyboardD                          .usage()),
      0x7002D => Some(KeyboardKeypad::KeyboardDashandUnderscore          .usage()),
      0x7002A => Some(KeyboardKeypad::KeyboardDelete                     .usage()),
      0x7004C => Some(KeyboardKeypad::KeyboardDeleteForward              .usage()),
      0x70051 => Some(KeyboardKeypad::KeyboardDownArrow                  .usage()),
      0x70008 => Some(KeyboardKeypad::KeyboardE                          .usage()),
      0x7004D => Some(KeyboardKeypad::KeyboardEnd                        .usage()),
      0x7002E => Some(KeyboardKeypad::KeyboardEqualsandPlus              .usage()),
      0x70029 => Some(KeyboardKeypad::KeyboardEscape                     .usage()),
      0x70074 => Some(KeyboardKeypad::KeyboardExecute                    .usage()),
      0x70009 => Some(KeyboardKeypad::KeyboardF                          .usage()),
      0x7003A => Some(KeyboardKeypad::KeyboardF1                         .usage()),
      0x70043 => Some(KeyboardKeypad::KeyboardF10                        .usage()),
      0x70044 => Some(KeyboardKeypad::KeyboardF11                        .usage()),
      0x70045 => Some(KeyboardKeypad::KeyboardF12                        .usage()),
      0x70068 => Some(KeyboardKeypad::KeyboardF13                        .usage()),
      0x70069 => Some(KeyboardKeypad::KeyboardF14                        .usage()),
      0x7006A => Some(KeyboardKeypad::KeyboardF15                        .usage()),
      0x7006B => Some(KeyboardKeypad::KeyboardF16                        .usage()),
      0x7006C => Some(KeyboardKeypad::KeyboardF17                        .usage()),
      0x7006D => Some(KeyboardKeypad::KeyboardF18                        .usage()),
      0x7006E => Some(KeyboardKeypad::KeyboardF19                        .usage()),
      0x7003B => Some(KeyboardKeypad::KeyboardF2                         .usage()),
      0x7006F => Some(KeyboardKeypad::KeyboardF20                        .usage()),
      0x70070 => Some(KeyboardKeypad::KeyboardF21                        .usage()),
      0x70071 => Some(KeyboardKeypad::KeyboardF22                        .usage()),
      0x70072 => Some(KeyboardKeypad::KeyboardF23                        .usage()),
      0x70073 => Some(KeyboardKeypad::KeyboardF24                        .usage()),
      0x7003C => Some(KeyboardKeypad::KeyboardF3                         .usage()),
      0x7003D => Some(KeyboardKeypad::KeyboardF4                         .usage()),
      0x7003E => Some(KeyboardKeypad::KeyboardF5                         .usage()),
      0x7003F => Some(KeyboardKeypad::KeyboardF6                         .usage()),
      0x70040 => Some(KeyboardKeypad::KeyboardF7                         .usage()),
      0x70041 => Some(KeyboardKeypad::KeyboardF8                         .usage()),
      0x70042 => Some(KeyboardKeypad::KeyboardF9                         .usage()),
      0x70038 => Some(KeyboardKeypad::KeyboardForwardSlashandQuestionMark.usage()),
      0x7000A => Some(KeyboardKeypad::KeyboardG                          .usage()),
      0x70035 => Some(KeyboardKeypad::KeyboardGraveAccentandTilde        .usage()),
      0x7000B => Some(KeyboardKeypad::KeyboardH                          .usage()),
      0x70075 => Some(KeyboardKeypad::KeyboardHelp                       .usage()),
      0x7004A => Some(KeyboardKeypad::KeyboardHome                       .usage()),
      0x7000C => Some(KeyboardKeypad::KeyboardI                          .usage()),
      0x70049 => Some(KeyboardKeypad::KeyboardInsert                     .usage()),
      0x7000D => Some(KeyboardKeypad::KeyboardJ                          .usage()),
      0x7000E => Some(KeyboardKeypad::KeyboardK                          .usage()),
      0x7000F => Some(KeyboardKeypad::KeyboardL                          .usage()),
      0x700E2 => Some(KeyboardKeypad::KeyboardLeftAlt                    .usage()),
      0x70034 => Some(KeyboardKeypad::KeyboardLeftAposandDouble          .usage()),
      0x70050 => Some(KeyboardKeypad::KeyboardLeftArrow                  .usage()),
      0x7002F => Some(KeyboardKeypad::KeyboardLeftBrace                  .usage()),
      0x700E0 => Some(KeyboardKeypad::KeyboardLeftControl                .usage()),
      0x700E3 => Some(KeyboardKeypad::KeyboardLeftGUI                    .usage()),
      0x700E1 => Some(KeyboardKeypad::KeyboardLeftShift                  .usage()),
      0x70010 => Some(KeyboardKeypad::KeyboardM                          .usage()),
      0x70011 => Some(KeyboardKeypad::KeyboardN                          .usage()),
      0x70064 => Some(KeyboardKeypad::KeyboardNonUSBackslashandPipe      .usage()),
      0x70012 => Some(KeyboardKeypad::KeyboardO                          .usage()),
      0x70013 => Some(KeyboardKeypad::KeyboardP                          .usage()),
      0x7004E => Some(KeyboardKeypad::KeyboardPageDown                   .usage()),
      0x7004B => Some(KeyboardKeypad::KeyboardPageUp                     .usage()),
      0x70048 => Some(KeyboardKeypad::KeyboardPause                      .usage()),
      0x70037 => Some(KeyboardKeypad::KeyboardPeriodandGreaterThan       .usage()),
      0x70046 => Some(KeyboardKeypad::KeyboardPrintScreen                .usage()),
      0x70014 => Some(KeyboardKeypad::KeyboardQ                          .usage()),
      0x70015 => Some(KeyboardKeypad::KeyboardR                          .usage()),
      0x70028 => Some(KeyboardKeypad::KeyboardReturnEnter                .usage()),
      0x700E6 => Some(KeyboardKeypad::KeyboardRightAlt                   .usage()),
      0x7004F => Some(KeyboardKeypad::KeyboardRightArrow                 .usage()),
      0x70030 => Some(KeyboardKeypad::KeyboardRightBrace                 .usage()),
      0x700E4 => Some(KeyboardKeypad::KeyboardRightControl               .usage()),
      0x700E7 => Some(KeyboardKeypad::KeyboardRightGUI                   .usage()),
      0x700E5 => Some(KeyboardKeypad::KeyboardRightShift                 .usage()),
      0x70016 => Some(KeyboardKeypad::KeyboardS                          .usage()),
      0x70047 => Some(KeyboardKeypad::KeyboardScrollLock                 .usage()),
      0x70077 => Some(KeyboardKeypad::KeyboardSelect                     .usage()),
      0x70033 => Some(KeyboardKeypad::KeyboardSemiColonandColon          .usage()),
      0x7002C => Some(KeyboardKeypad::KeyboardSpacebar                   .usage()),
      0x70017 => Some(KeyboardKeypad::KeyboardT                          .usage()),
      0x7002B => Some(KeyboardKeypad::KeyboardTab                        .usage()),
      0x70018 => Some(KeyboardKeypad::KeyboardU                          .usage()),
      0x70052 => Some(KeyboardKeypad::KeyboardUpArrow                    .usage()),
      0x70019 => Some(KeyboardKeypad::KeyboardV                          .usage()),
      0x7001A => Some(KeyboardKeypad::KeyboardW                          .usage()),
      0x7001B => Some(KeyboardKeypad::KeyboardX                          .usage()),
      0x7001C => Some(KeyboardKeypad::KeyboardY                          .usage()),
      0x7001D => Some(KeyboardKeypad::KeyboardZ                          .usage()),
      0x70062 => Some(KeyboardKeypad::Keypad0andInsert                   .usage()),
      0x70059 => Some(KeyboardKeypad::Keypad1andEnd                      .usage()),
      0x7005A => Some(KeyboardKeypad::Keypad2andDownArrow                .usage()),
      0x7005B => Some(KeyboardKeypad::Keypad3andPageDn                   .usage()),
      0x7005C => Some(KeyboardKeypad::Keypad4andLeftArrow                .usage()),
      0x7005D => Some(KeyboardKeypad::Keypad5                            .usage()),
      0x7005E => Some(KeyboardKeypad::Keypad6andRightArrow               .usage()),
      0x7005F => Some(KeyboardKeypad::Keypad7andHome                     .usage()),
      0x70060 => Some(KeyboardKeypad::Keypad8andUpArrow                  .usage()),
      0x70061 => Some(KeyboardKeypad::Keypad9andPageUp                   .usage()),
      0x70056 => Some(KeyboardKeypad::KeypadDash                         .usage()),
      0x70054 => Some(KeyboardKeypad::KeypadForwardSlash                 .usage()),
      0x70053 => Some(KeyboardKeypad::KeypadNumLockandClear              .usage()),
      0x70063 => Some(KeyboardKeypad::KeypadPeriodandDelete              .usage()),
      0x70057 => Some(KeyboardKeypad::KeypadPlus                         .usage()),
      0x70055 => Some(KeyboardKeypad::KeypadStar                         .usage()),
      _ => None,
    }
  }
  }

#[test]
#[allow(unused_parens)]
fn test_code() {
  assert!(AsUsage::usage_value((&{Button::Button(1)                                  .usage()})) == 0x90001);
  assert!(AsUsage::usage_value((&{Button::Button(2)                                  .usage()})) == 0x90002);
  assert!(AsUsage::usage_value((&{Button::Button(3)                                  .usage()})) == 0x90003);
  assert!(AsUsage::usage_value((&{Button::Button(4)                                  .usage()})) == 0x90004);
  assert!(AsUsage::usage_value((&{Button::Button(5)                                  .usage()})) == 0x90005);
  assert!(AsUsage::usage_value((&{Consumer::ACBack                                   .usage()})) == 0xC0224);
  assert!(AsUsage::usage_value((&{Consumer::ACBookmarks                              .usage()})) == 0xC022A);
  assert!(AsUsage::usage_value((&{Consumer::ACForward                                .usage()})) == 0xC0225);
  assert!(AsUsage::usage_value((&{Consumer::ACHome                                   .usage()})) == 0xC0223);
  assert!(AsUsage::usage_value((&{Consumer::ACRefresh                                .usage()})) == 0xC0227);
  assert!(AsUsage::usage_value((&{Consumer::ACSearch                                 .usage()})) == 0xC0221);
  assert!(AsUsage::usage_value((&{Consumer::ACStop                                   .usage()})) == 0xC0226);
  assert!(AsUsage::usage_value((&{Consumer::ALEmailReader                            .usage()})) == 0xC018A);
  assert!(AsUsage::usage_value((&{Consumer::MediaSelection                           .usage()})) == 0xC0087);
  assert!(AsUsage::usage_value((&{Consumer::Mute                                     .usage()})) == 0xC00E2);
  assert!(AsUsage::usage_value((&{Consumer::PlayPause                                .usage()})) == 0xC00CD);
  assert!(AsUsage::usage_value((&{Consumer::ScanNextTrack                            .usage()})) == 0xC00B5);
  assert!(AsUsage::usage_value((&{Consumer::ScanPreviousTrack                        .usage()})) == 0xC00B6);
  assert!(AsUsage::usage_value((&{Consumer::Stop                                     .usage()})) == 0xC00B7);
  assert!(AsUsage::usage_value((&{Consumer::VolumeDecrement                          .usage()})) == 0xC00EA);
  assert!(AsUsage::usage_value((&{Consumer::VolumeIncrement                          .usage()})) == 0xC00E9);
  assert!(AsUsage::usage_value((&{GenericDesktop::SystemSleep                        .usage()})) == 0x10082);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keyboard0andRightBracket           .usage()})) == 0x70027);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keyboard1andBang                   .usage()})) == 0x7001E);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keyboard2andAt                     .usage()})) == 0x7001F);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keyboard3andHash                   .usage()})) == 0x70020);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keyboard4andDollar                 .usage()})) == 0x70021);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keyboard5andPercent                .usage()})) == 0x70022);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keyboard6andCaret                  .usage()})) == 0x70023);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keyboard7andAmpersand              .usage()})) == 0x70024);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keyboard8andStar                   .usage()})) == 0x70025);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keyboard9andLeftBracket            .usage()})) == 0x70026);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardA                          .usage()})) == 0x70004);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardApplication                .usage()})) == 0x70065);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardB                          .usage()})) == 0x70005);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardBackslashandPipe           .usage()})) == 0x70031);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardC                          .usage()})) == 0x70006);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardCancel                     .usage()})) == 0x7009B);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardCapsLock                   .usage()})) == 0x70039);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardClear                      .usage()})) == 0x7009C);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardCommaandLessThan           .usage()})) == 0x70036);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardD                          .usage()})) == 0x70007);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardDashandUnderscore          .usage()})) == 0x7002D);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardDelete                     .usage()})) == 0x7002A);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardDeleteForward              .usage()})) == 0x7004C);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardDownArrow                  .usage()})) == 0x70051);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardE                          .usage()})) == 0x70008);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardEnd                        .usage()})) == 0x7004D);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardEqualsandPlus              .usage()})) == 0x7002E);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardEscape                     .usage()})) == 0x70029);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardExecute                    .usage()})) == 0x70074);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF                          .usage()})) == 0x70009);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF1                         .usage()})) == 0x7003A);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF10                        .usage()})) == 0x70043);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF11                        .usage()})) == 0x70044);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF12                        .usage()})) == 0x70045);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF13                        .usage()})) == 0x70068);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF14                        .usage()})) == 0x70069);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF15                        .usage()})) == 0x7006A);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF16                        .usage()})) == 0x7006B);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF17                        .usage()})) == 0x7006C);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF18                        .usage()})) == 0x7006D);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF19                        .usage()})) == 0x7006E);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF2                         .usage()})) == 0x7003B);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF20                        .usage()})) == 0x7006F);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF21                        .usage()})) == 0x70070);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF22                        .usage()})) == 0x70071);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF23                        .usage()})) == 0x70072);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF24                        .usage()})) == 0x70073);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF3                         .usage()})) == 0x7003C);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF4                         .usage()})) == 0x7003D);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF5                         .usage()})) == 0x7003E);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF6                         .usage()})) == 0x7003F);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF7                         .usage()})) == 0x70040);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF8                         .usage()})) == 0x70041);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardF9                         .usage()})) == 0x70042);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardForwardSlashandQuestionMark.usage()})) == 0x70038);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardG                          .usage()})) == 0x7000A);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardGraveAccentandTilde        .usage()})) == 0x70035);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardH                          .usage()})) == 0x7000B);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardHelp                       .usage()})) == 0x70075);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardHome                       .usage()})) == 0x7004A);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardI                          .usage()})) == 0x7000C);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardInsert                     .usage()})) == 0x70049);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardJ                          .usage()})) == 0x7000D);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardK                          .usage()})) == 0x7000E);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardL                          .usage()})) == 0x7000F);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardLeftAlt                    .usage()})) == 0x700E2);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardLeftAposandDouble          .usage()})) == 0x70034);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardLeftArrow                  .usage()})) == 0x70050);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardLeftBrace                  .usage()})) == 0x7002F);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardLeftControl                .usage()})) == 0x700E0);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardLeftControl                .usage()})) == 0x700E0);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardLeftGUI                    .usage()})) == 0x700E3);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardLeftShift                  .usage()})) == 0x700E1);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardM                          .usage()})) == 0x70010);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardN                          .usage()})) == 0x70011);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardNonUSBackslashandPipe      .usage()})) == 0x70064);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardO                          .usage()})) == 0x70012);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardP                          .usage()})) == 0x70013);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardPageDown                   .usage()})) == 0x7004E);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardPageUp                     .usage()})) == 0x7004B);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardPause                      .usage()})) == 0x70048);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardPeriodandGreaterThan       .usage()})) == 0x70037);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardPrintScreen                .usage()})) == 0x70046);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardQ                          .usage()})) == 0x70014);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardR                          .usage()})) == 0x70015);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardReturnEnter                .usage()})) == 0x70028);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardRightAlt                   .usage()})) == 0x700E6);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardRightArrow                 .usage()})) == 0x7004F);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardRightBrace                 .usage()})) == 0x70030);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardRightControl               .usage()})) == 0x700E4);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardRightGUI                   .usage()})) == 0x700E7);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardRightShift                 .usage()})) == 0x700E5);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardS                          .usage()})) == 0x70016);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardScrollLock                 .usage()})) == 0x70047);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardSelect                     .usage()})) == 0x70077);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardSemiColonandColon          .usage()})) == 0x70033);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardSpacebar                   .usage()})) == 0x7002C);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardT                          .usage()})) == 0x70017);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardTab                        .usage()})) == 0x7002B);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardU                          .usage()})) == 0x70018);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardUpArrow                    .usage()})) == 0x70052);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardV                          .usage()})) == 0x70019);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardW                          .usage()})) == 0x7001A);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardX                          .usage()})) == 0x7001B);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardY                          .usage()})) == 0x7001C);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeyboardZ                          .usage()})) == 0x7001D);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keypad0andInsert                   .usage()})) == 0x70062);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keypad1andEnd                      .usage()})) == 0x70059);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keypad2andDownArrow                .usage()})) == 0x7005A);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keypad3andPageDn                   .usage()})) == 0x7005B);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keypad4andLeftArrow                .usage()})) == 0x7005C);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keypad5                            .usage()})) == 0x7005D);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keypad6andRightArrow               .usage()})) == 0x7005E);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keypad7andHome                     .usage()})) == 0x7005F);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keypad8andUpArrow                  .usage()})) == 0x70060);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::Keypad9andPageUp                   .usage()})) == 0x70061);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeypadDash                         .usage()})) == 0x70056);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeypadForwardSlash                 .usage()})) == 0x70054);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeypadNumLockandClear              .usage()})) == 0x70053);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeypadPeriodandDelete              .usage()})) == 0x70063);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeypadPlus                         .usage()})) == 0x70057);
  assert!(AsUsage::usage_value((&{KeyboardKeypad::KeypadStar                         .usage()})) == 0x70055);
  }
